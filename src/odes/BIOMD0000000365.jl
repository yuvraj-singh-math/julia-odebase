# scraped from ODEBASE, all credit goes to them
using Oscar;
paramsRing,(k1,k2,k3,k4,k5,k6,k7,k8,k9,k10,k11,k12,k13,k14,k15)=rational_function_field(QQ,["k1","k2","k3","k4","k5","k6","k7","k8","k9","k10","k11","k12","k13","k14","k15"])
polRing,(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30)=polynomial_ring(paramsRing,["x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","x16","x17","x18","x19","x20","x21","x22","x23","x24","x25","x26","x27","x28","x29","x30"])
chemSystem=[((-1)*k10*(k1*x2*x1 - k2*x3) + (-1)*k10*(k1*x4*x1 - k2*x5) + (-1)*k10*(k1*x6*x1 - k2*x7) + (-1)*k10*(k1*x8*x1 - k2*x9) + (-1)*k10*(k1*x10*x1 - k2*x11) + (-1)*k10*(k1*x12*x1 - k2*x13) + (-1)*k10*(k1*x14*x1 - k2*x15) + (-1)*k10*(k1*x17*x1 - k2*x23) + (-1)*k10*(k1*x29*x1 - k2*x30))/k10, ((-1)*k10*(k1*x2*x1 - k2*x3) + (-1)*k10*(k8*x2 - k9*x16*x17))/k10, (1*k10*(k1*x2*x1 - k2*x3) + (-1)*k10*k4*x3 + (-1)*k10*k3*x3)/k10, ((-1)*k10*(k1*x4*x1 - k2*x5) + (-1)*k10*(k8*x4 - k9*x19*x17) + (-1)*k10*(k6*x4 - k7*x25*x29))/k10, (1*k10*(k1*x4*x1 - k2*x5) + 1*k10*k3*x3 + (-1)*k10*k5*x5 + (-1)*k10*k4*x5 + (-1)*k10*(k6*x5 - k7*x25*x30))/k10, ((-1)*k10*(k1*x6*x1 - k2*x7) + (-1)*k10*(k8*x6 - k9*x18*x17))/k10, (1*k10*(k1*x6*x1 - k2*x7) + 1*k10*k4*x3 + (-1)*k10*k5*x7 + (-1)*k10*k3*x7)/k10, ((-1)*k10*(k1*x8*x1 - k2*x9) + (-1)*k10*(k8*x8 - k9*x24*x17) + (-1)*k10*(k6*x8 - k7*x26*x29))/k10, (1*k10*(k1*x8*x1 - k2*x9) + 1*k10*k3*x7 + (-1)*k10*k5*x9 + 1*k10*k4*x5 + (-1)*k10*(k6*x9 - k7*x26*x30))/k10, ((-1)*k10*(k1*x10*x1 - k2*x11) + (-1)*k10*(k8*x10 - k9*x20*x17))/k10, (1*k10*(k1*x10*x1 - k2*x11) + 1*k10*k5*x7 + (-1)*k10*k3*x11)/k10, ((-1)*k10*(k1*x12*x1 - k2*x13) + (-1)*k10*(k8*x12 - k9*x21*x17) + (-1)*k10*(k6*x12 - k7*x27*x29))/k10, (1*k10*(k1*x12*x1 - k2*x13) + 1*k10*k5*x5 + (-1)*k10*k4*x13 + (-1)*k10*(k6*x13 - k7*x27*x30))/k10, ((-1)*k10*(k1*x14*x1 - k2*x15) + (-1)*k10*(k8*x14 - k9*x22*x17) + (-1)*k10*(k6*x14 - k7*x28*x29))/k10, (1*k10*(k1*x14*x1 - k2*x15) + 1*k10*k3*x11 + 1*k10*k5*x9 + 1*k10*k4*x13 + (-1)*k10*(k6*x15 - k6*x28*x30))/k10, 1*k10*(k8*x2 - k9*x16*x17)/k10, (1*k10*(k8*x2 - k9*x16*x17) + 1*k10*(k8*x6 - k9*x18*x17) + 1*k10*(k8*x4 - k9*x19*x17) + 1*k10*(k8*x10 - k9*x20*x17) + 1*k10*(k8*x8 - k9*x24*x17) + 1*k10*(k8*x12 - k9*x21*x17) + 1*k10*(k8*x14 - k9*x22*x17) + (-1)*k10*(k1*x17*x1 - k2*x23))/k10, 1*k10*(k8*x6 - k9*x18*x17)/k10, 1*k10*(k8*x4 - k9*x19*x17)/k10, 1*k10*(k8*x10 - k9*x20*x17)/k10, 1*k10*(k8*x12 - k9*x21*x17)/k10, 1*k10*(k8*x14 - k9*x22*x17)/k10, 1*k10*(k1*x17*x1 - k2*x23)/k10, 1*k10*(k8*x8 - k9*x24*x17)/k10, (1*k10*(k6*x4 - k7*x25*x29) + 1*k10*(k6*x5 - k7*x25*x30))/k10, (1*k10*(k6*x8 - k7*x26*x29) + 1*k10*(k6*x9 - k7*x26*x30))/k10, (1*k10*(k6*x12 - k7*x27*x29) + 1*k10*(k6*x13 - k7*x27*x30))/k10, (1*k10*(k6*x14 - k7*x28*x29) + 1*k10*(k6*x15 - k6*x28*x30))/k10, (1*k10*(k6*x4 - k7*x25*x29) + 1*k10*(k6*x8 - k7*x26*x29) + 1*k10*(k6*x12 - k7*x27*x29) + 1*k10*(k6*x14 - k7*x28*x29) + (-1)*k10*(k1*x29*x1 - k2*x30))/k10, (1*k10*(k6*x5 - k7*x25*x30) + 1*k10*(k6*x9 - k7*x26*x30) + 1*k10*(k6*x13 - k7*x27*x30) + 1*k10*(k6*x15 - k6*x28*x30) + 1*k10*(k1*x29*x1 - k2*x30))/k10 ]
constraints=[ 1*k10*x1 + 1*k10*x3 + 1*k10*x5 + 1*k10*x7 + 1*k10*x9 + 1*k10*x11 + 1*k10*x13 + 1*k10*x15 + 1*k10*x23 + 1*k10*x30 - k10*k11, 1*k10*x2 + 1*k10*x3 + 1*k10*x4 + 1*k10*x5 + 1*k10*x6 + 1*k10*x7 + 1*k10*x8 + 1*k10*x9 + 1*k10*x10 + 1*k10*x11 + 1*k10*x12 + 1*k10*x13 + 1*k10*x14 + 1*k10*x15 + 1*k10*x16 + 1*k10*x18 + 1*k10*x19 + 1*k10*x20 + 1*k10*x21 + 1*k10*x22 + 1*k10*x24 + 1*k10*x25 + 1*k10*x26 + 1*k10*x27 + 1*k10*x28 - k10*k12, 1*k10*x2 + 1*k10*x3 + 1*k10*x4 + 1*k10*x5 + 1*k10*x6 + 1*k10*x7 + 1*k10*x8 + 1*k10*x9 + 1*k10*x10 + 1*k10*x11 + 1*k10*x12 + 1*k10*x13 + 1*k10*x14 + 1*k10*x15 + 1*k10*x16 + 1*k10*x18 + 1*k10*x19 + 1*k10*x20 + 1*k10*x21 + 1*k10*x22 + 1*k10*x24 + 1*k10*x29 + 1*k10*x30 - k10*k13, 1*k10*x2 + 1*k10*x3 + 1*k10*x4 + 1*k10*x5 + 1*k10*x6 + 1*k10*x7 + 1*k10*x8 + 1*k10*x9 + 1*k10*x10 + 1*k10*x11 + 1*k10*x12 + 1*k10*x13 + 1*k10*x14 + 1*k10*x15 + 1*k10*x17 + 1*k10*x23 + 1*k10*x25 + 1*k10*x26 + 1*k10*x27 + 1*k10*x28 - k10*k14, 1*k10*x2 + 1*k10*x3 + 1*k10*x4 + 1*k10*x5 + 1*k10*x6 + 1*k10*x7 + 1*k10*x8 + 1*k10*x9 + 1*k10*x10 + 1*k10*x11 + 1*k10*x12 + 1*k10*x13 + 1*k10*x14 + 1*k10*x15 + 1*k10*x17 + 1*k10*x23 + 1*k10*x29 + 1*k10*x30 - k10*k15 ]
name="BIOMD0000000365"

