# scraped from ODEBASE, all credit goes to them
using Oscar;
paramsRing,(k1,k2,k3,k4,k5,k6,k7,k8,k9,k10,k11,k12,k13,k14,k15,k16,k17,k18,k19,k20,k21,k22,k23,k24,k25,k26,k27,k28,k29,k30,k31,k32,k33,k34)=rational_function_field(QQ,["k1","k2","k3","k4","k5","k6","k7","k8","k9","k10","k11","k12","k13","k14","k15","k16","k17","k18","k19","k20","k21","k22","k23","k24","k25","k26","k27","k28","k29","k30","k31","k32","k33","k34"])
polRing,(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23)=polynomial_ring(paramsRing,["x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","x16","x17","x18","x19","x20","x21","x22","x23"])
chemSystem=[(-1)*k2*k3*x2*x1/k2, (-1)*k2*k3*x2*x1/k2, (1*k2*k3*x2*x1 + (-1)*k2*k7*x3*x4 + 1*k2*k8*x9)/k2, (1*k2*k4*x5^2 + (-1)*k2*k5*x4 + (-1)*k2*k7*x3*x4 + 1*k2*k8*x9 + 1*k2*k12*x11)/k2, ((-2)*k2*k4*x5^2 + 2*k2*k5*x4)/k2, ((-1)*k2*k6*x6*x8 + 1*k2*k11*x10)/k2, (1*k2*k6*x6*x8 + (-1)*k2*k9*x7*x9 + 1*k2*k10*x10)/k2, ((-1)*k2*k6*x6*x8 + (-1)*k2*k13*x8*x18 + 1*k2*k25*x12 + 2*k2*k26*x19 + 3*k2*k27*x22)/k2, (1*k2*k7*x3*x4 + (-1)*k2*k8*x9 + (-1)*k2*k9*x7*x9 + 1*k2*k10*x10)/k2, (1*k2*k9*x7*x9 + (-1)*k2*k10*x10 + (-1)*k2*k11*x10)/k2, (1*k2*k11*x10 + (-1)*k2*k12*x11)/k2, (1*k2*k12*x11 + (-1)*k2*k14*x12*x13 + 1*k2*k15*x14 + (-1)*k2*k25*x12)/k2, ((-1)*k2*k14*x12*x13 + 1*k2*k15*x14 + 1*k2*k19*x17 + (-1)*k2*k20*x13*x19 + 1*k2*k24*x21)/k2, (1*k2*k14*x12*x13 + (-1)*k2*k15*x14 + (-1)*k2*k16*x14*x15 + 1*k2*k17*x16)/k2, (1*k2*k13*x8*x18 + (-1)*k2*k16*x14*x15 + 1*k2*k17*x16 + (-1)*k2*k21*x15*x17 + 1*k2*k22*x20)/k2, (1*k2*k16*x14*x15 + (-1)*k2*k17*x16 + (-1)*k2*k18*x16)/k2, (1*k2*k18*x16 + (-1)*k2*k19*x17 + 1*k2*k20*x13*x19 + (-1)*k2*k21*x15*x17 + 1*k2*k22*x20)/k2, ((-1)*k2*k13*x8*x18 + 1*k2*k18*x16 + 1*k2*k23*x20)/k2, (1*k2*k19*x17 + (-1)*k2*k20*x13*x19 + (-1)*k2*k26*x19)/k2, (1*k2*k21*x15*x17 + (-1)*k2*k22*x20 + (-1)*k2*k23*x20)/k2, (1*k2*k23*x20 + (-1)*k2*k24*x21)/k2, (1*k2*k24*x21 + (-1)*k2*k27*x22)/k2, (1*k2*k25*x12 + 1*k2*k26*x19 + 1*k2*k27*x22)/k2 ]
constraints=[ 1*k2*x1 + 1*k2*x3 + 1*k2*x9 + 1*k2*x10 + 1*k2*x11 + 1*k2*x12 + 1*k2*x14 + 1*k2*x16 + 1*k2*x17 + 1*k2*x19 + 1*k2*x20 + 1*k2*x21 + 1*k2*x22 + 1*k2*x23 - k2*k28, 1*k2*x2 + 1*k2*x3 + 1*k2*x9 + 1*k2*x10 + 1*k2*x11 + 1*k2*x12 + 1*k2*x14 + 1*k2*x16 + 1*k2*x17 + 1*k2*x19 + 1*k2*x20 + 1*k2*x21 + 1*k2*x22 + 1*k2*x23 - k2*k29, 2*k2*x4 + 1*k2*x5 + 2*k2*x9 + 2*k2*x10 + 2*k2*x11 - k2*k30, 1*k2*x6 + 1*k2*x7 + 1*k2*x10 - k2*k31, 1*k2*x7 + 1*k2*x8 + 1*k2*x10 + 1*k2*x11 + 1*k2*x12 + 1*k2*x14 + 1*k2*x15 + 2*k2*x16 + 2*k2*x17 + 2*k2*x19 + 3*k2*x20 + 3*k2*x21 + 3*k2*x22 - k2*k32, 1*k2*x13 + 1*k2*x14 + 1*k2*x16 + 1*k2*x17 + 1*k2*x20 + 1*k2*x21 - k2*k33, 1*k2*x15 + 1*k2*x16 + 1*k2*x18 + 1*k2*x20 - k2*k34 ]
name="BIOMD0000000475"

